#!/usr/bin/env ruby
require "fileutils"

# path to your application root.
APP_ROOT = File.expand_path("..", __dir__)

def system!(*args)
  system(*args) || abort("\n== Command #{args} failed ==")
end

FileUtils.chdir APP_ROOT do
  # This script is a way to set up or update your development environment automatically.
  # This script is idempotent, so that you can run it at any time and get an expectable outcome.
  # Add necessary setup steps to this file.

  puts "== Installing dependencies =="
  system! "gem install bundler --conservative"
  system("bundle check") || system!("bundle install")

  # puts "\n== Copying sample files =="
  # unless File.exist?("config/database.yml")
  #   FileUtils.cp "config/database.yml.sample", "config/database.yml"
  # end

  puts "\n== Preparing database =="
  system! "bin/rails db:prepare"

  puts "\n== Removing old logs and tempfiles =="
  system! "bin/rails log:clear tmp:clear"

  puts "\n== Restarting application server =="
  system! "bin/rails restart"
end










=begin

#!/usr/bin/env ruby
require "fileutils"

# path to your application root.
APP_ROOT = File.expand_path("..", __dir__)

def log(message)
  puts "[ bin/setup ] #{message}"
end

def setup
  log "Installing gems"
  system! "gem install bundler --conservative"
  system("bundle check") || system!("bundle install")


  log "Installing Node modules"
  system! "bundle exec rails app:update:bin"
  system! "bin/yarn check --check-files || bin/yarn install"



  log "Dropping & recreating the development database"
  system! "bin/rails db:reset || bin/rails db:migrate"
  log "Dropping & recreating the test database"
  system!({ "RAILS_ENV" => "test" }, "bin/rails db:reset")
  log "All set up."
  log ""
  log "To see commonly-needed commands, run:"
  log ""
  log " bin/setup help"
  log ""
  log "\n== Removing old logs and tempfiles =="
  system! "bin/rails log:clear tmp:clear"
  # puts "\n== Restarting application server =="
  # system! "bin/rails restart"
end

def help
  log "Useful commands:"
  log ""
  log " bin/run"
  log " # run app locally"
  log ""
  log " bin/ci"
  log " # runs all tests and checks as CI would"
  log ""
  log " bin/rails test"
  log " # run non-system tests"
  log ""
  log " bin/rails test:system"
  log " # run system tests"
  log ""
  log " bin/setup help"
  log " # show this help"
  log ""
end

def system!(*args)
  log "Executing #{args}"
  if system(*args)
    log "#{args} succeeded"
  else
    log "#{args} failed"
    abort
  end
end

FileUtils.chdir APP_ROOT do
  if ARGV[0] == "help"
    help
  else
    setup
  end
end



=end